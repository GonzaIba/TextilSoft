// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230307192842_ALTER_TABLES")]
    partial class ALTER_TABLES
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.ClientesModel", b =>
                {
                    b.Property<int>("ID_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellido")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstadoCliente")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaNac")
                        .HasColumnType("datetime");

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Residencia")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Cliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Domain.Models.DetallePedidosModel", b =>
                {
                    b.Property<int>("ID_DetallePedido")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Cantidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("ID_Pedido")
                        .HasColumnType("int");

                    b.Property<int>("ID_Producto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_DetallePedido");

                    b.HasIndex("ID_Producto");

                    b.ToTable("DetallePedido");
                });

            modelBuilder.Entity("Domain.Models.EmpleadosModel", b =>
                {
                    b.Property<Guid>("ID_Empleados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellido")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Legajo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Residencia")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Empleados");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Domain.Models.EstadoPedidoModel", b =>
                {
                    b.Property<int>("ID_EstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID_EstadoPedido");

                    b.ToTable("EstadoPedido");
                });

            modelBuilder.Entity("Domain.Models.FacturasModel", b =>
                {
                    b.Property<int>("ID_Factura")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Pedido")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroFactura")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroPedido")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAPagar")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TotalAbonado")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Factura");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Domain.Models.OrdenDeTrabajoModel", b =>
                {
                    b.Property<int>("ID_OrdenDeTrabajo")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("CreateUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EsPedido")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoOrden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCerrado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Pedido")
                        .HasColumnType("int");

                    b.Property<int>("ID_Sector")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_OrdenDeTrabajo");

                    b.ToTable("OrdenDeTrabajo");
                });

            modelBuilder.Entity("Domain.Models.PedidosModel", b =>
                {
                    b.Property<int>("ID_Pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("CreateUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<Guid>("ID_Empleados")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ID_EstadoPedido")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPedido")
                        .HasColumnType("int");

                    b.Property<decimal?>("Seña")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TotalPago")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Pedido");

                    b.HasIndex("ID_Cliente");

                    b.HasIndex("ID_Empleados");

                    b.HasIndex("ID_EstadoPedido");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Domain.Models.ProductosModel", b =>
                {
                    b.Property<int>("ID_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("CodigoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Composicion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Estampa")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Precio")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TallePrenda")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tejido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoProducto")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Producto");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Domain.Models.ProductosProveedorModel", b =>
                {
                    b.Property<int>("ID_ProductoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CantidadRollos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("ID_Proveedor")
                        .HasColumnType("int");

                    b.Property<string>("MarcaTela")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Precio")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoTela")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_ProductoProveedor");

                    b.HasIndex("ID_Proveedor");

                    b.ToTable("ProductoProveedor");
                });

            modelBuilder.Entity("Domain.Models.ProveedoresModel", b =>
                {
                    b.Property<int>("ID_Proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("CreateUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstadoProveedor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<string>("LugarEmpresa")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mail")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Proveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("Domain.Models.SectorModel", b =>
                {
                    b.Property<int>("ID_Sector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("NombreSector")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Sector");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("Domain.Models.VentasModel", b =>
                {
                    b.Property<int>("ID_Venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CapitalRecibido")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("CreateUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Producto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_Venta");

                    b.HasIndex("ID_Producto");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Domain.Models.DetallePedidosModel", b =>
                {
                    b.HasOne("Domain.Models.PedidosModel", "Pedidos")
                        .WithMany("DetallePedido")
                        .HasForeignKey("ID_DetallePedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.ProductosModel", "Producto")
                        .WithMany("DetallePedido")
                        .HasForeignKey("ID_Producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedidos");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Domain.Models.FacturasModel", b =>
                {
                    b.HasOne("Domain.Models.PedidosModel", "Pedidos")
                        .WithMany("Factura")
                        .HasForeignKey("ID_Factura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Domain.Models.OrdenDeTrabajoModel", b =>
                {
                    b.HasOne("Domain.Models.PedidosModel", "Pedidos")
                        .WithMany("OrdenDeTrabajo")
                        .HasForeignKey("ID_OrdenDeTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.SectorModel", "Sector")
                        .WithMany("OrdenDeTrabajo")
                        .HasForeignKey("ID_OrdenDeTrabajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedidos");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Domain.Models.PedidosModel", b =>
                {
                    b.HasOne("Domain.Models.ClientesModel", "Clientes")
                        .WithMany("Pedidos")
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.EmpleadosModel", "Empleados")
                        .WithMany("Pedidos")
                        .HasForeignKey("ID_Empleados")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.EstadoPedidoModel", "EstadoPedido")
                        .WithMany("Pedidos")
                        .HasForeignKey("ID_EstadoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("EstadoPedido");
                });

            modelBuilder.Entity("Domain.Models.ProductosProveedorModel", b =>
                {
                    b.HasOne("Domain.Models.ProveedoresModel", "Proveedor")
                        .WithMany("ProductoProveedor")
                        .HasForeignKey("ID_Proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Models.VentasModel", b =>
                {
                    b.HasOne("Domain.Models.ProductosModel", "Producto")
                        .WithMany("Venta")
                        .HasForeignKey("ID_Producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Domain.Models.ClientesModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Domain.Models.EmpleadosModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Domain.Models.EstadoPedidoModel", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Domain.Models.PedidosModel", b =>
                {
                    b.Navigation("DetallePedido");

                    b.Navigation("Factura");

                    b.Navigation("OrdenDeTrabajo");
                });

            modelBuilder.Entity("Domain.Models.ProductosModel", b =>
                {
                    b.Navigation("DetallePedido");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Domain.Models.ProveedoresModel", b =>
                {
                    b.Navigation("ProductoProveedor");
                });

            modelBuilder.Entity("Domain.Models.SectorModel", b =>
                {
                    b.Navigation("OrdenDeTrabajo");
                });
#pragma warning restore 612, 618
        }
    }
}
